name: e2e

on:
  pull_request:
  push:
    branches:
      - main
      - DK-2795-e2e-tests

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/_temp/_github_home/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Setup Kubernetes
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1
          image: kindest/node:v1.21.1@sha256:69860bda5563ac81e3c0057d654b5253219618a22ec3a346306239bba8cfa1a6
      - name: Setup Kustomize
        uses: fluxcd/pkg/actions/kustomize@main
      - name: Setup envtest
        uses: fluxcd/pkg/actions/envtest@main
        with:
          version: "1.19.2"
      - name: Setup Helm
        uses: fluxcd/pkg/actions/helm@main
      - name: Run controller tests
        run: make test
      - name: Check if working tree is dirty
        run: |
          if [[ $(git diff --stat) != '' ]]; then
            git --no-pager diff
            echo 'run make test and commit changes'
            exit 1
          fi
      - name: Build container image1
        run: make docker-build-without-tests IMG=test/k8skafka-controller:latest BUILD_PLATFORMS=linux/amd64 BUILD_ARGS=--load
      - name: Load test image
        run: kind load docker-image test/k8skafka-controller:latest
      - name: Deploy controller
        run: make deploy IMG=test/k8skafka-controller:latest
      - name: Setup Kafka
        env:
          KAFKA_VERSION: ${{ '0.5.0' }}
        run: |
          kubectl create ns kafka
          helm repo add confluentinc https://confluentinc.github.io/cp-helm-charts/
          helm upgrade --wait -i kafka confluentinc/cp-helm-charts \
          --version $KAFKA_VERSION \
          --namespace kafka
      - name: Setup Kafka client
        run: |
          kubectl -n kafka apply -f ./config/testdata/test-kafka-client.yaml
          kubectl -n kafka wait --for=condition=ready pod -l app=kafka-client

      - name: Run Kafka e2e tests
        run: |
          kubectl -n k8skafka-system apply -f ./config/testdata/kafkatopics/create-new
          kubectl -n k8skafka-system wait kafkatopic/test-create-new --for=condition=Ready --timeout=1m
          kubectl -n kafka exec -it kafka-client -- kafka-topics --describe --topic test-create-new --bootstrap-server kafka-cp-kafka:9092
          res=$(kubectl -n kafka exec -it kafka-client -- kafka-topics --describe --topic test-create-new --bootstrap-server kafka-cp-kafka:9092)
          echo $res
          [ -z "$res" ] && exit 1
      - name: Logs
        run: |
          kubectl -n k8skafka-system wait --for=condition=ready pod -l app=k8skafka-controller && kubectl -n k8skafka-system logs deploy/k8skafka-controller
      - name: Debug failure
        if: failure()
        run: |
          kubectl -n kube-system describe pods
          kubectl -n k8skafka-system describe pods
          kubectl -n k8skafka-system get kafkatopic -oyaml
          kubectl -n k8skafka-system describe kafkatopic
          kubectl -n k8skafka-system get all
          kubectl -n k8skafka-system logs deploy/k8skafka-controller
          kubectl -n kafka get all
          kubectl -n minio get all